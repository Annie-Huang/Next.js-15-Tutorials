Next.js 15 Tutorial - Beginner to Advanced (https://www.youtube.com/playlist?list=PLC3y8-rFHvwhIEc4I4YsRz5C7GOBnxSJY)

https://github.com/gopinav/Next.js-15-Tutorials
https://github.com/Annie-Huang/Next.js-15-Tutorials

https://react-slick.neostack.com/docs/get-started
https://www.npmjs.com/package/react-slick   <--- click PlayGround link
https://stackblitz.com/edit/vitejs-vite-ownrun?file=src%2FImageSlider.jsx
------------------------------------------------------------------------------

PS C:\react\Next.js-15-Tutorials> npx create-next-app@latest rendering-demo

√ Would you like to use TypeScript? ... Yes
√ Would you like to use ESLint? ... Yes
√ Would you like to use Tailwind CSS? ... Yes
√ Would you like your code inside a `src/` directory? ... Yes
√ Would you like to use App Router? (recommended) ... Yes
√ Would you like to use Turbopack for `next dev`? ... No
√ Would you like to customize the import alias (`@/*` by default)? ... Yes
√ What import alias would you like configured? ... @/*
Creating a new Next.js app in C:\react\Next.js-15-Tutorials\rendering-demo.

Server side component vs client side component, read the image description, it is very clear.

PS C:\react\Next.js-15-Tutorials\rendering-demo> npm run dev
PS C:\react\Next.js-15-Tutorials\rendering-demo> npm run build  (delete .next folder before you do this)
PS C:\react\Next.js-15-Tutorials\rendering-demo> npm i server-only
PS C:\react\Next.js-15-Tutorials\rendering-demo> npm install react-slick slick-carousel @types/react-slick
PS C:\react\Next.js-15-Tutorials\rendering-demo> npm i client-only

http://localhost:3000/about
http://localhost:3000/dashboard
http://localhost:3000/products/1
http://localhost:3000/server-route
http://localhost:3000/client-route


Output of npm run build - static rendering:
=====================================================
Route (app)                              Size     First Load JS
┌ ○ /                                    5.52 kB         123 kB         << 117kB + 5.52kB = 123kB   on server side
├ ○ /_not-found                          978 B           118 kB         << 117kB + 978B = 118kB     on server side
├ ○ /about                               137 B           117 kB         ...
└ ○ /dashboard                           371 B           118 kB
+ First Load JS shared by all            117 kB
  ├ chunks/4bd1b696-a36ea8e456db238f.js  53 kB
  ├ chunks/587-6fd2573952aa57fe.js       62.3 kB
  └ other shared chunks (total)          1.95 kB


○  (Static)  prerendered as static content





Output of npm run build - dynamic rendering:
=====================================================
After adding the cookies part in about\page.tsx

Route (app)                              Size     First Load JS
┌ ○ /                                    5.52 kB         123 kB
├ ○ /_not-found                          978 B           118 kB
├ ƒ /about                               137 B           117 kB
└ ○ /dashboard                           371 B           118 kB
+ First Load JS shared by all            117 kB
  ├ chunks/4bd1b696-a36ea8e456db238f.js  53 kB
  ├ chunks/587-6fd2573952aa57fe.js       62.3 kB
  └ other shared chunks (total)          1.95 kB


○  (Static)   prerendered as static content
ƒ  (Dynamic)  server-rendered on demand


Output of npm run build - static rendering on /products page but dynamic rendering on /products/[id] page:
=============================================================================================================
No generateStaticParams:
http://localhost:3000/products/1    <--- you can see the timestamp changes. because it's dynamic.

Route (app)                              Size     First Load JS
┌ ○ /                                    5.52 kB         123 kB
├ ○ /_not-found                          978 B           118 kB
├ ƒ /about                               139 B           117 kB
├ ○ /dashboard                           371 B           118 kB
├ ○ /products                            170 B           117 kB
└ ƒ /products/[id]                       139 B           117 kB
+ First Load JS shared by all            117 kB
  ├ chunks/4bd1b696-a36ea8e456db238f.js  53 kB
  ├ chunks/587-6fd2573952aa57fe.js       62.3 kB
  └ other shared chunks (total)          1.95 kB


○  (Static)   prerendered as static content
ƒ  (Dynamic)  server-rendered on demand


Output of npm run build - static rendering on /products page but dynamic rendering on /products/[id] page:
=============================================================================================================
With generateStaticParams:
http://localhost:3000/products/1    <--- you can see the timestamp does not changed. because it's pre-rendered.

export const dynamicParams = false;
// It is set to true by default by generateStaticParams, which means you can get http://localhost:3000/products/4 and it will be generated under the .next folder when request.
// If you set it to false, then the page will return a 404 when you request http://localhost:3000/products/4


Route (app)                              Size     First Load JS
┌ ○ /                                    5.52 kB         123 kB
├ ○ /_not-found                          978 B           118 kB
├ ƒ /about                               139 B           117 kB
├ ○ /dashboard                           371 B           118 kB
├ ○ /products                            170 B           117 kB
└ ● /products/[id]                       139 B           117 kB
    ├ /products/1
    ├ /products/2
    └ /products/3
+ First Load JS shared by all            117 kB
  ├ chunks/4bd1b696-a36ea8e456db238f.js  53 kB
  ├ chunks/587-6fd2573952aa57fe.js       62.3 kB
  └ other shared chunks (total)          1.95 kB


○  (Static)   prerendered as static content
●  (SSG)      prerendered as static HTML (uses generateStaticParams)
ƒ  (Dynamic)  server-rendered on demand


################################################################################################################################
################################################################################################################################
################################################################################################################################

PS C:\react\Next.js-15-Tutorials> npx create-next-app@latest data-fetching-demo
Need to install the following packages:
create-next-app@15.2.3
Ok to proceed? (y) y

√ Would you like to use TypeScript? ... Yes
√ Would you like to use ESLint? ... Yes
√ Would you like to use Tailwind CSS? ... Yes
√ Would you like your code inside a `src/` directory? ... Yes
√ Would you like to use App Router? (recommended) ... Yes
√ Would you like to use Turbopack for `next dev`? ... No
√ Would you like to customize the import alias (`@/*` by default)? ... Yes
√ What import alias would you like configured? ... @/*
Creating a new Next.js app in C:\react\Next.js-15-Tutorials\data-fetching-demo.


PS C:\react\Next.js-15-Tutorials\data-fetching-demo> npm run dev
PS C:\react\Next.js-15-Tutorials\data-fetching-demo> npm install prisma -D
PS C:\react\Next.js-15-Tutorials\data-fetching-demo> npx prisma init --datasource-provider sqlite
PS C:\react\Next.js-15-Tutorials\data-fetching-demo> npx prisma migrate dev --name init


http://localhost:3000/users-client
http://localhost:3000/users-server
http://localhost:3000/posts-sequential      <-- sequential fetching
http://localhost:3000/user-parallel/1       <-- parallel fetching. using Promise.all
http://localhost:3000/products-db
http://localhost:3000/react-form            <-- normal client component to make a mutation call.
http://localhost:3000/products-db-create    <-- server action mutation submission.
                                                ("NOTE14 - Server Actions benefits.jpg")
http://localhost:3000/products-db/1
http://localhost:3000
http://localhost:3000/products-db?query=product+3       <-- after enter 'product 3' in the <input> component in home page.



The current repo is how I following the tutorial and create the code along side. Which is different from the version in the author github.
Not sure why the author making a lot of editing (mainly sub split files) in his repo. But if you need to revisit this as template for future project, make sure you compare both repos


################################################################################################################################
################################################################################################################################
################################################################################################################################

PS C:\react\Next.js-15-Tutorials> npx create-next-app@latest routing-demo
Need to install the following packages:
create-next-app@15.2.4
Ok to proceed? (y) y

√ Would you like to use TypeScript? ... Yes
√ Would you like to use ESLint? ... Yes
√ Would you like to use Tailwind CSS? ... Yes
√ Would you like your code inside a `src/` directory? ... Yes
√ Would you like to use App Router? (recommended) ... Yes
√ Would you like to use Turbopack for `next dev`? ... No
√ Would you like to customize the import alias (`@/*` by default)? ... Yes
√ What import alias would you like configured? ... @/*
Creating a new Next.js app in C:\react\Next.js-15-Tutorials\routing-demo.


http://localhost:3000/
http://localhost:3000/about
http://localhost:3000/profile
http://localhost:3000/dashboard     <-- route page not exists will default show 404

Nested route:
http://localhost:3000/blog
http://localhost:3000/blog/first
http://localhost:3000/blog/second

Dynamic route:
http://localhost:3000/products
http://localhost:3000/products/1    <-- with the route of products/[productId], show the params.productId in the template
http://localhost:3000/products/2
http://localhost:3000/products/1/reviews/1
http://localhost:3000/products/100/reviews/5    <-- with the route of products/[productId]/reviews/[reviewId]

Catch all Segments:
http://localhost:3000/docs                      <-- docs/[[...slug]], if you don't need to use the same file with docs page, you can just use docs/[...slug]
http://localhost:3000/docs/feature1
http://localhost:3000/docs/feature1/concept1
http://localhost:3000/docs/feature1/concept1/example1

http://localhost:3000/billing                   <-- show no-found.tsx
http://localhost:3000/products/1/reviews/1001   <-- manually trigger no found page. if no-found.tsx does not exist in products/[productId]/reviews/[reviewId] folder, then it will show the cloese one until it hit into the root folder's not-found.tsx
http://localhost:3000/dashboard                 <-- you will get 404 if /dashboard/page.tsx not exist, even if other component files in /dashboard folder exists
http://localhost:3000/_lib                      <-- private folder will not show page.tsx even if it exists. if you actually want an underscore in your URL, use '%5F' insetad. That's just the URL-encoded version of an underscore.

Route Groups:
http://localhost:3000/register                  <-- All under (auth) route group
http://localhost:3000/login
http://localhost:3000/forgot-password

Layout:
http://localhost:3000
http://localhost:3000/products
http://localhost:3000/products/1                <-- a different layout on top of the root layout

Multiple Root Layout:
The only want to achieve this is to not have page.tsx and layout.tsx in the root folder, shift it to one of the group route folder, e.g.
  app/
    (auth)/
      login/
      register/
        page.tsx        <-- http://localhost:3000/register will use the layout under (auth). Keep in mind that you cannot have page.tsx just under (auth). otherwise nextjs will confuse which root page to use for http://localhost:3000
      layout.tsx        <-- can only have layout.tsx, not page.tsx just underneath (auth)
    (marketing)/
      customers/
      revenue/
      layout.tsx
      page.tsx          <-- http://localhost:3000 will use this and this layout

Routing Metadata
http://localhost:3000
http://localhost:3000/about
http://localhost:3000/products/1    <-- generate metadata from params info. Got scenario that we need to make an api call to get fetch further info for metadata as well.
                                        Keep in mind you can only use metadata object or generateMetadata inside the same file, cannot use them both together.
